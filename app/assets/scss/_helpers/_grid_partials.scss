// Grid variables
// ============================================//
$unsemantic-prefix-suffix-support: true !default;
$unsemantic-push-pull-support: true !default;
$container-max-width: 1200px !default;
$gutter-half: 10px !default;
$container-gutter: $gutter-half !default;
$lang-forward: left !default;
$lang-reverse: right !default;

// Grid Extend Methods:
// ============================================//
// base styles for mobile, tablet, desktop
@mixin unsemantic-grid-base($_LIST...) {
  // ===========
  // `Container.
  // ===========

  .grid-container {
    @extend %grid-container;
  }

  // ========================
  // `Clear floated elements.
  // ========================

  .clear {
    @extend %clear;
  }

  .clearfix {
    @extend %clearfix;
  }

  // =============================
  // `Parent and offset overrides.
  // =============================

  // Remove padding, if it's being used
  // as a parent for other grid columns.
  .grid-parent {
    @extend %grid-parent;
  }

  // Offset the left/right margin of an
  // element that contains grid units.
  .grid-offset {
    @extend %grid-offset;
  }

  // ==============
  // `Grid columns.
  // ==============

  @if type-of($_LIST) == arglist {
    @each $_SCOPE in $_LIST {
      $class: "";

      // Class prefix.
      @if $_SCOPE and $_SCOPE != desktop {
        $class: #{$_SCOPE + "-"};
      }

      // For 5 through 100 percent.
      @for $i from 1 through 20 {
        $num: $i * 5;

        .#{$class}grid-#{$num} {
          @extend %grid-columns-all;
        }
      }

      // For one-third and two-thirds.
      @for $i from 1 through 2 {
        $num: $i * 33;

        .#{$class}grid-#{$num} {
          @extend %grid-columns-all;
        }
      }
    }
  }
}


// placeholders for responsive settings
@mixin unsemantic-grid-placeholders($_SCOPE: null) {
  $scope: "";

  // Set if it exists.
  @if $_SCOPE {
    $scope: #{$_SCOPE + "-"};
  }

  // ========================
  // `Clear floated elements.
  // ========================

  // http://sonspring.com/journal/clearing-floats

  %#{$scope}clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
  }

  // http://www.yuiblog.com/blog/2010/09/27/clearfix-reloaded-overflowhidden-demystified

  %#{$scope}clearfix:before,
  %#{$scope}clearfix:after {
    content: ".";
    display: block;
    overflow: hidden;
    visibility: hidden;
    font-size: 0;
    line-height: 0;
    width: 0;
    height: 0;
  }

  %#{$scope}clearfix:after {
    clear: both;
  }

  // ===========
  // `Container.
  // ===========

  %#{$scope}grid-container {
    @extend %#{$scope}clearfix;
    margin-left: auto;
    margin-right: auto;

    // Set if it exists.
    @if $container-max-width {
      max-width: $container-max-width;
    }

    // Set if it exists.
    @if $container-gutter {
      padding-left: $container-gutter;
      padding-right: $container-gutter;
    }
  }

  // ==============
  // `Grid columns.
  // ==============

  %#{$scope}grid-columns-all {
    @extend %#{$scope}clearfix;

    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;

    // Set if it exists.
    @if $gutter-half {
      padding-left: $gutter-half;
      padding-right: $gutter-half;
    }
  }

  // Remove padding, if it's being used
  // as a parent for other grid columns.
  %#{$scope}grid-parent {
    padding-left: 0;
    padding-right: 0;
  }

  // Offset the left/right margin of an
  // element that contains grid units.
  %#{$scope}grid-offset {
    @extend %#{$scope}clearfix;
    clear: both;

    // Set if it exists.
    @if $gutter-half {
      margin-left: -1 * $gutter-half;
      margin-right: -1 * $gutter-half;
    }
  }

  // Allow column swapping?
  @if $unsemantic-push-pull-support {
    // Allows columns to be offset +/- left.
    %#{$scope}grid-columns-push-pull {
      position: relative;
    }
  }

  // ===============================
  // `Hide on desktop/tablet/mobile.
  // ===============================

  %#{$scope}hide {
    display: none !important;
  }

  // ==============
  // `Grid columns.
  // ==============

  // For 5 through 95 percent.
  @for $i from 1 through 19 {
    $num: $i * 5;
    $decimal: $num / 100;
    $percent: $num * 1%;

    %#{$scope}grid-#{$num} {
      float: $lang-forward;
      width: $percent;
    }

    // Allow empty columns?
    @if $unsemantic-prefix-suffix-support {
      // Prefix, to add extra columns before.
      %#{$scope}prefix-#{$num} {
        margin-#{$lang-forward}: $percent;
      }

      // Suffix, to add extra columns after.
      %#{$scope}suffix-#{$num} {
        margin-#{$lang-reverse}: $percent;
      }
    }

    // Allow column swapping?
    @if $unsemantic-push-pull-support {
      // Push columns forward.
      %#{$scope}push-#{$num} {
        #{$lang-forward}: $percent;
      }

      // Pull columns backward.
      %#{$scope}pull-#{$num} {
        #{$lang-forward}: $percent * -1;
      }
    }
  }

  // For one-third and two-thirds.
  @for $i from 1 through 2 {
    $num: $i * 33;
    $one-third: 1 / 3;
    $decimal: $i * $one-third;
    $percent: ($num + $decimal) * 1%;

    // Percentage based widths.
    %#{$scope}grid-#{$num} {
      float: $lang-forward;
      width: $percent;
    }

    // Allow empty columns?
    @if $unsemantic-prefix-suffix-support {
      // Prefix, to add extra columns before.
      %#{$scope}prefix-#{$num} {
        margin-#{$lang-forward}: $percent;
      }

      // Suffix, to add extra columns after.
      %#{$scope}suffix-#{$num} {
        margin-#{$lang-reverse}: $percent;
      }
    }

    // Allow column swapping?
    @if $unsemantic-push-pull-support {
      // Push columns forward.
      %#{$scope}push-#{$num} {
        #{$lang-forward}: $percent;
      }

      // Pull columns backward.
      %#{$scope}pull-#{$num} {
        #{$lang-forward}: $percent * -1;
      }
    }
  }

  // Full width, just line-break.
  %#{$scope}grid-100 {
    clear: both;
    width: 100%;
  }
}

// Grid Create Mixin:
// ============================================//
@mixin unsemantic-grid-scoped($_SCOPE: null) {
  $scope: "";
  $class: "";

  // Set if it exists.
  @if $_SCOPE {
    $scope: #{$_SCOPE + "-"};
  }

  // Class prefix.
  @if $_SCOPE and $_SCOPE != desktop {
    $class: #{$_SCOPE + "-"};
  }

  // ================
  // `Hide on mobile.
  // ================
  @if $_SCOPE {
    .#{$_SCOPE}-hide {
      @extend %#{$scope}hide;
    }
  } @else {
    .hide {
      @extend %#{$scope}hide;
    }
  }


  // ==============
  // `Grid columns.
  // ==============

  // Full width, just line-break.
  .#{$class}grid-100 {
  @extend %#{$scope}grid-100;
  }

  // For 5 through 95 percent.
  @for $i from 1 through 19 {
    $num: $i * 5;

    // Percentage based widths.
    .#{$class}grid-#{$num} {
      @extend %#{$scope}grid-#{$num};
    }

    // Allow empty columns?
    @if $unsemantic-prefix-suffix-support {
      // Prefix, to add extra columns before.
      .#{$class}prefix-#{$num} {
        @extend %#{$scope}prefix-#{$num};
      }

      // Suffix, to add extra columns after.
      .#{$class}suffix-#{$num} {
        @extend %#{$scope}suffix-#{$num};
      }
    }
  }

  // For one-third and two-thirds.
  @for $i from 1 through 2 {
    $num: $i * 33;

    // Percentage based widths.
    .#{$class}grid-#{$num} {
    @extend %#{$scope}grid-#{$num};
    }

    // Allow empty columns?
    @if $unsemantic-prefix-suffix-support {
      // Prefix, to add extra columns before.
      .#{$class}prefix-#{$num} {
        @extend %#{$scope}prefix-#{$num};
      }

      // Suffix, to add extra columns after.
      .#{$class}suffix-#{$num} {
        @extend %#{$scope}suffix-#{$num};
      }
    }
  }

  // ==============================================================
  // `Push & Pull, to rearrange column order (for potential "SEO").
  // ==============================================================

  // Allow column swapping?
  @if $unsemantic-push-pull-support {
    // For 5 through 95 percent.
    @for $i from 1 through 19 {
    $num: $i * 5;

    // Push columns forward.
    .#{$class}push-#{$num} {
      @extend %#{$scope}push-#{$num};
      @extend %#{$scope}grid-columns-push-pull;
    }

    // Pull columns backward.
    .#{$class}pull-#{$num} {
      @extend %#{$scope}pull-#{$num};
      @extend %#{$scope}grid-columns-push-pull;
      }
    }

    // For one-third and two-thirds.
    @for $i from 1 through 2 {
      $num: $i * 33;

      // Push columns forward.
      .#{$class}push-#{$num} {
        @extend %#{$scope}push-#{$num};
        @extend %#{$scope}grid-columns-push-pull;
      }

      // Pull columns backward.
      .#{$class}pull-#{$num} {
        @extend %#{$scope}pull-#{$num};
        @extend %#{$scope}grid-columns-push-pull;
      }
    }
  }
}
